version: "3.8"

services:

  # client:
  #   container_name: client
  #   build:
  #     context: ./client
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   command: serve -s -l 3000
  #   environment:
  #     - REACT_APP_API_HOST=nginx
  #     - REACT_APP_API_PORT=80
  #     - REACT_APP_API_SECURE=false
  #   depends_on:
  #     - clining_app
  #   volumes:
  #     - media_volume:/media
  #   networks:
  #     - clin

  client:
    container_name: client
    build:
      context: ./client
    restart: unless-stopped
    ports:
      - "3000:80"
    networks:
      - clin

  clining_app:
    build: ./backend
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      DB_HOST_P: db
      DB_USER_P: postgres
      DB_PASSWORD_P: 3803
      DB_NAME_P: postgres
      DB_PORT_P: 5432
    expose:
      - 8000
    networks:
      - clin
    restart: always

  db:
    image: postgres:16.3
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 3803
      POSTGRES_INITDB_ARGS: "-A md5"
    networks:
      - clin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    build:
      context: ./
      dockerfile: nginx/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - clining_app
      - client
    networks:
      - clin
    restart: always

networks:
  clin:
    driver: bridge

volumes:
  postgres_data:
  media_volume:    # Defined
  backend_static:  # Defined
